{"version":3,"sources":["components/assets/normal.svg","components/assets/loss.svg","components/assets/profit.svg","components/Graph.js","App.js","index.js"],"names":["Graph","props","profit","check","loss","percentage","total","className","src","profitImg","lossImg","normalImg","alt","style","display","id","App","useState","setCheck","showError","setshowError","currentPrice","setcurrentPrice","purchasePrice","setpurchasePrice","stockQty","setstockQty","type","placeholder","value","onChange","event","target","onClick","console","log","isNaN","c_price","parseInt","p_price","stock_qty","diff","Math","abs","toFixed","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b6cf83d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/normal.b27a9d41.svg\";","export default __webpack_public_path__ + \"static/media/loss.e71f061d.svg\";","export default __webpack_public_path__ + \"static/media/profit.6a495d16.svg\";","import normalImg from \"./assets/normal.svg\";\r\nimport lossImg from \"./assets/loss.svg\";\r\nimport profitImg from \"./assets/profit.svg\";\r\n\r\nimport \"./Graph.css\";\r\n\r\nexport default function Graph(props) {\r\n  const profit = props.check.profit;\r\n  const loss = props.check.loss;\r\n  const percentage = props.check.percentage;\r\n  const total = props.check.total;\r\n\r\n  function getImage() {\r\n    if (!profit && !loss) return normalImg;\r\n    if (profit) return profitImg;\r\n    if (loss) return lossImg;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"graph\">\r\n        <img src={getImage()} alt=\"normal\" />\r\n        <div\r\n          className=\"profit__div\"\r\n          style={{\r\n            display: profit || loss ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <div className=\"profit-box\">\r\n            <h4 id=\"title_percentage\">{profit ? \"Profit\" : \"Loss\"}</h4>\r\n            <h4 id=\"percentage\">{percentage} %</h4>\r\n          </div>\r\n          <div className=\"profit-box\">\r\n            <h4 id=\"title_total\">Total {profit ? \"Profit\" : \"Loss\"}</h4>\r\n            <h4 id=\"Total\">â‚¹ {total}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Graph from \"./components/Graph\";\r\n\r\nfunction App() {\r\n  const [check, setCheck] = useState({\r\n    profit: false,\r\n    loss: false,\r\n    percentage: \"\",\r\n    total: \"\",\r\n  });\r\n\r\n  const [showError, setshowError] = useState(false);\r\n  const [currentPrice, setcurrentPrice] = useState(\"\");\r\n  const [purchasePrice, setpurchasePrice] = useState(\"\");\r\n  const [stockQty, setstockQty] = useState(\"\");\r\n\r\n  const purchasePriceHandler = (event) => setpurchasePrice(event.target.value);\r\n  const currentPriceHandler = (event) => setcurrentPrice(event.target.value);\r\n  const stockQtyHandler = (event) => setstockQty(event.target.value);\r\n\r\n  const submitHandler = () => {\r\n    setshowError(false);\r\n    setCheck({ profit: false, loss: false });\r\n    console.log({ currentPrice, purchasePrice, stockQty });\r\n\r\n    if (\r\n      isNaN(currentPrice) ||\r\n      isNaN(purchasePrice) ||\r\n      isNaN(stockQty) ||\r\n      currentPrice === \"\" ||\r\n      purchasePrice === \"\" ||\r\n      stockQty === \"\"\r\n    )\r\n      setshowError(true);\r\n    else {\r\n      let c_price = parseInt(currentPrice);\r\n      let p_price = parseInt(purchasePrice);\r\n      let stock_qty = parseInt(stockQty);\r\n\r\n      const diff = c_price * stock_qty - p_price * stock_qty;\r\n      const percentage = (Math.abs(diff) / (p_price + c_price)).toFixed(2);\r\n\r\n      if (diff < 0) {\r\n        setCheck((prev) => {\r\n          return {\r\n            ...prev,\r\n            loss: true,\r\n            percentage,\r\n            total: Math.abs(diff),\r\n          };\r\n        });\r\n      } else {\r\n        setCheck((prev) => {\r\n          return {\r\n            ...prev,\r\n            profit: true,\r\n            percentage,\r\n            total: Math.abs(diff),\r\n          };\r\n        });\r\n      }\r\n    }\r\n\r\n    if (isNaN(currentPrice)) setcurrentPrice(\"\");\r\n    if (isNaN(purchasePrice)) setpurchasePrice(\"\");\r\n    if (isNaN(stockQty)) setstockQty(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"main \" +\r\n        (check.profit ? \"theme-profit \" : \"\") +\r\n        (check.loss ? \"theme-loss \" : \"\")\r\n      }\r\n    >\r\n      <h1>Check Profit/Loss on your Stock</h1>\r\n      <Graph check={check} />\r\n      <input\r\n        type=\"text\"\r\n        id=\"purchase_price\"\r\n        placeholder=\"Purchase Price\"\r\n        value={purchasePrice}\r\n        onChange={purchasePriceHandler}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        id=\"current_price\"\r\n        placeholder=\"Current Price\"\r\n        value={currentPrice}\r\n        onChange={currentPriceHandler}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        id=\"stock_qty\"\r\n        placeholder=\"Stock Quantity\"\r\n        value={stockQty}\r\n        onChange={stockQtyHandler}\r\n      />\r\n      <button type=\"submit\" id=\"submit\" onClick={submitHandler}>\r\n        CHECK\r\n      </button>\r\n      <div\r\n        className=\"invalid-input\"\r\n        style={{ display: showError ? \"flex\" : \"none\" }}\r\n        id=\"invalid-input\"\r\n      >\r\n        <h4 id=\"message\">Invalid Input</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}